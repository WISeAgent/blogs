"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[21],{24163:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/Kubernetes_deploy-6709177acda261e0ff0561c8d807735f.PNG"},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>a});var s=t(96540);const i={},r=s.createContext(i);function l(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(r.Provider,{value:n},e.children)}},51743:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"TechSavvy/kubernetes/k8s_deployment_intro","title":"Getting Started with Kubernetes Deployments: Helm, GitOps, and ArgoCD","description":"A practical introduction to deploying applications on Kubernetes using Helm, GitOps, and ArgoCD. Learn why raw YAML doesn\'t scale and how modern tools simplify configuration, automation, and collaboration.","source":"@site/docs/TechSavvy/kubernetes/k8s_deployment_intro.md","sourceDirName":"TechSavvy/kubernetes","slug":"/TechSavvy/kubernetes/deployment-intro","permalink":"/blogs/docs/TechSavvy/kubernetes/deployment-intro","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/TechSavvy/kubernetes/k8s_deployment_intro.md","tags":[{"inline":true,"label":"kubernetes","permalink":"/blogs/docs/tags/kubernetes"},{"inline":true,"label":"helm","permalink":"/blogs/docs/tags/helm"},{"inline":true,"label":"gitops","permalink":"/blogs/docs/tags/gitops"},{"inline":true,"label":"argocd","permalink":"/blogs/docs/tags/argocd"},{"inline":true,"label":"devops","permalink":"/blogs/docs/tags/devops"},{"inline":true,"label":"deployment","permalink":"/blogs/docs/tags/deployment"},{"inline":true,"label":"getting-started","permalink":"/blogs/docs/tags/getting-started"}],"version":"current","frontMatter":{"title":"Getting Started with Kubernetes Deployments: Helm, GitOps, and ArgoCD","description":"A practical introduction to deploying applications on Kubernetes using Helm, GitOps, and ArgoCD. Learn why raw YAML doesn\'t scale and how modern tools simplify configuration, automation, and collaboration.","slug":"/TechSavvy/kubernetes/deployment-intro","authors":["wiseagent"],"tags":["kubernetes","helm","gitops","argocd","devops","deployment","getting-started"]},"sidebar":"WISeAgentSidebar","previous":{"title":"Kubernetes","permalink":"/blogs/docs/TechSavvy/kubernetes/"},"next":{"title":"Kubernetes Deployment Strategies: A Senior DevOps Perspective","permalink":"/blogs/docs/TechSavvy/kubernetes/deployment-strategies"}}');var i=t(74848),r=t(28453);const l={title:"Getting Started with Kubernetes Deployments: Helm, GitOps, and ArgoCD",description:"A practical introduction to deploying applications on Kubernetes using Helm, GitOps, and ArgoCD. Learn why raw YAML doesn't scale and how modern tools simplify configuration, automation, and collaboration.",slug:"/TechSavvy/kubernetes/deployment-intro",authors:["wiseagent"],tags:["kubernetes","helm","gitops","argocd","devops","deployment","getting-started"]},a="Getting Started with Kubernetes Deployments: Helm, GitOps, and ArgoCD",o={},c=[{value:"The Problem: Raw Kubernetes is Hard to Manage",id:"the-problem-raw-kubernetes-is-hard-to-manage",level:2},{value:"Helm: The Kubernetes Package Manager",id:"helm-the-kubernetes-package-manager",level:2},{value:"Key Concepts",id:"key-concepts",level:3},{value:"Basic Helm Commands",id:"basic-helm-commands",level:3},{value:"Why Helm Helps",id:"why-helm-helps",level:3},{value:"GitOps: Infrastructure as Code, Git as Truth",id:"gitops-infrastructure-as-code-git-as-truth",level:2},{value:"Core Principles",id:"core-principles",level:3},{value:"Traditional vs. GitOps Deployment",id:"traditional-vs-gitops-deployment",level:3},{value:"GitOps Repository Structure",id:"gitops-repository-structure",level:3},{value:"Benefits of GitOps",id:"benefits-of-gitops",level:3},{value:"ArgoCD: GitOps Made Easy",id:"argocd-gitops-made-easy",level:2},{value:"How ArgoCD Works",id:"how-argocd-works",level:3},{value:"ArgoCD Application Definition",id:"argocd-application-definition",level:3},{value:"ArgoCD Features",id:"argocd-features",level:3},{value:"Putting It All Together: A Complete Workflow",id:"putting-it-all-together-a-complete-workflow",level:2},{value:"1. Create a Helm Chart",id:"1-create-a-helm-chart",level:3},{value:"2. Store Chart in Git",id:"2-store-chart-in-git",level:3},{value:"3. Create ArgoCD Application",id:"3-create-argocd-application",level:3},{value:"4. Deploy via Git",id:"4-deploy-via-git",level:3},{value:"5. Make Changes",id:"5-make-changes",level:3},{value:"Choosing Your Deployment Strategy",id:"choosing-your-deployment-strategy",level:2},{value:"When to Use Each Tool",id:"when-to-use-each-tool",level:2},{value:"Start with Helm if you need:",id:"start-with-helm-if-you-need",level:3},{value:"Add GitOps when you want:",id:"add-gitops-when-you-want",level:3},{value:"Implement ArgoCD when you have:",id:"implement-argocd-when-you-have",level:3},{value:"Common Beginner Mistakes",id:"common-beginner-mistakes",level:2},{value:"Next Steps",id:"next-steps",level:2},{value:"Learning Resources",id:"learning-resources",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"getting-started-with-kubernetes-deployments-helm-gitops-and-argocd",children:"Getting Started with Kubernetes Deployments: Helm, GitOps, and ArgoCD"})}),"\n",(0,i.jsx)(n.h2,{id:"the-problem-raw-kubernetes-is-hard-to-manage",children:"The Problem: Raw Kubernetes is Hard to Manage"}),"\n",(0,i.jsxs)(n.p,{children:["When you first start deploying applications to Kubernetes, you'll likely begin with raw YAML files and ",(0,i.jsx)(n.code,{children:"kubectl apply"}),". For a simple application, this might look like:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f deployment.yaml\nkubectl apply -f service.yaml  \nkubectl apply -f ingress.yaml\n"})}),"\n",(0,i.jsx)(n.p,{children:"This works fine for learning, but quickly becomes unmanageable as you add:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Multiple environments (development, staging, production)"}),"\n",(0,i.jsx)(n.li,{children:"Configuration variations between environments"}),"\n",(0,i.jsx)(n.li,{children:"Multiple applications"}),"\n",(0,i.jsx)(n.li,{children:"Team collaboration"}),"\n",(0,i.jsx)(n.li,{children:"Change tracking and rollbacks"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"That's where Helm, GitOps, and ArgoCD come in. They solve these problems by adding structure, automation, and best practices to your Kubernetes deployments."}),"\n",(0,i.jsx)(n.h2,{id:"helm-the-kubernetes-package-manager",children:"Helm: The Kubernetes Package Manager"}),"\n",(0,i.jsxs)(n.p,{children:["Think of Helm like ",(0,i.jsx)(n.code,{children:"npm"})," for Node.js or ",(0,i.jsx)(n.code,{children:"pip"})," for Python, but for Kubernetes applications. Instead of managing individual YAML files, you work with ",(0,i.jsx)(n.strong,{children:"Charts"})," - packaged applications that can be easily installed, upgraded, and shared."]}),"\n",(0,i.jsx)(n.h3,{id:"key-concepts",children:"Key Concepts"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Helm Chart"}),": A directory structure containing all the Kubernetes YAML files needed to run an application, plus templates and configuration options."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"my-web-app/\n\u251c\u2500\u2500 Chart.yaml          # Chart metadata\n\u251c\u2500\u2500 values.yaml         # Default configuration\n\u251c\u2500\u2500 templates/          # Kubernetes YAML templates\n\u2502   \u251c\u2500\u2500 deployment.yaml\n\u2502   \u251c\u2500\u2500 service.yaml\n\u2502   \u2514\u2500\u2500 ingress.yaml\n\u2514\u2500\u2500 charts/            # Dependencies (other charts)\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Templates"}),": Instead of static YAML, Helm uses templates with placeholders:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"# templates/deployment.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: {{ .Values.appName }}\nspec:\n  replicas: {{ .Values.replicaCount }}\n  template:\n    spec:\n      containers:\n      - name: web\n        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Values"}),": Configuration that gets plugged into templates:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'# values.yaml\nappName: my-web-app\nreplicaCount: 2\nimage:\n  repository: nginx\n  tag: "1.21"\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Releases"}),": A deployed instance of a chart. You can have multiple releases of the same chart (e.g., ",(0,i.jsx)(n.code,{children:"my-app-staging"})," and ",(0,i.jsx)(n.code,{children:"my-app-production"}),")."]}),"\n",(0,i.jsx)(n.h3,{id:"basic-helm-commands",children:"Basic Helm Commands"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Install a chart from a repository\nhelm install my-release bitnami/nginx\n\n# Install your own chart with custom values\nhelm install my-app ./my-chart --values production-values.yaml\n\n# Upgrade a release\nhelm upgrade my-app ./my-chart --set image.tag=v2.0.0\n\n# See what's deployed\nhelm list\n\n# Rollback to previous version\nhelm rollback my-app 1\n"})}),"\n",(0,i.jsx)(n.h3,{id:"why-helm-helps",children:"Why Helm Helps"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Reusability"}),": One chart can deploy to multiple environments with different configurations"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Versioning"}),": Track what version of your application is deployed where"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Rollbacks"}),": Easy to revert to previous versions"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Packaging"}),": Share applications with others through chart repositories"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"gitops-infrastructure-as-code-git-as-truth",children:"GitOps: Infrastructure as Code, Git as Truth"}),"\n",(0,i.jsx)(n.p,{children:"GitOps is a way of managing infrastructure and applications where Git repositories become the single source of truth for what should be running in your systems."}),"\n",(0,i.jsx)(n.h3,{id:"core-principles",children:"Core Principles"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Everything in Git"}),": All configuration, infrastructure definitions, and application manifests live in Git repositories"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Declarative"}),": You describe what you want (desired state), not how to get there"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Automated"}),": Tools automatically make your infrastructure match what's in Git"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Auditable"}),": Git history shows who changed what and when"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"traditional-vs-gitops-deployment",children:"Traditional vs. GitOps Deployment"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Traditional (Push-based)"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Developer \u2192 CI/CD Pipeline \u2192 kubectl apply \u2192 Kubernetes Cluster\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"GitOps (Pull-based)"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Developer \u2192 Git Repository \u2192 GitOps Controller \u2192 Kubernetes Cluster\n"})}),"\n",(0,i.jsx)(n.h3,{id:"gitops-repository-structure",children:"GitOps Repository Structure"}),"\n",(0,i.jsx)(n.p,{children:"A typical GitOps repository might look like:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"k8s-deployments/\n\u251c\u2500\u2500 applications/\n\u2502   \u251c\u2500\u2500 web-app/\n\u2502   \u2502   \u251c\u2500\u2500 base/              # Common configuration\n\u2502   \u2502   \u2514\u2500\u2500 environments/\n\u2502   \u2502       \u251c\u2500\u2500 development/\n\u2502   \u2502       \u251c\u2500\u2500 staging/\n\u2502   \u2502       \u2514\u2500\u2500 production/\n\u2502   \u2514\u2500\u2500 api-service/\n\u251c\u2500\u2500 infrastructure/\n\u2502   \u251c\u2500\u2500 monitoring/\n\u2502   \u2514\u2500\u2500 ingress/\n\u2514\u2500\u2500 clusters/\n    \u251c\u2500\u2500 dev-cluster/\n    \u2514\u2500\u2500 prod-cluster/\n"})}),"\n",(0,i.jsx)(n.h3,{id:"benefits-of-gitops",children:"Benefits of GitOps"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Visibility"}),": See exactly what's deployed by looking at Git"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Rollbacks"}),": Revert to any previous Git commit"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Collaboration"}),": Use standard Git workflows (pull requests, code reviews)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Disaster Recovery"}),": Rebuild entire environments from Git"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Security"}),": No need to give deployment tools direct cluster access"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"argocd-gitops-made-easy",children:"ArgoCD: GitOps Made Easy"}),"\n",(0,i.jsx)(n.p,{children:"ArgoCD is a tool that implements GitOps for Kubernetes. It continuously monitors Git repositories and automatically synchronizes your cluster to match what's defined in Git."}),"\n",(0,i.jsx)(n.h3,{id:"how-argocd-works",children:"How ArgoCD Works"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Repository Monitoring"}),": ArgoCD watches specified Git repositories for changes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Desired State Comparison"}),": It compares what's in Git with what's running in the cluster"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Synchronization"}),": When differences are detected, ArgoCD updates the cluster to match Git"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Health Monitoring"}),": It continuously checks that applications are running correctly"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"argocd-application-definition",children:"ArgoCD Application Definition"}),"\n",(0,i.jsx)(n.p,{children:"Here's how you tell ArgoCD about an application to manage:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"apiVersion: argoproj.io/v1alpha1\nkind: Application\nmetadata:\n  name: my-web-app\n  namespace: argocd\nspec:\n  # Where to find the application definition\n  source:\n    repoURL: https://github.com/mycompany/k8s-configs\n    path: applications/web-app/environments/production\n    targetRevision: main\n  \n  # Where to deploy it\n  destination:\n    server: https://kubernetes.default.svc\n    namespace: web-app\n  \n  # Sync policy\n  syncPolicy:\n    automated:\n      selfHeal: true    # Fix manual changes automatically\n      prune: true       # Remove resources not in Git\n"})}),"\n",(0,i.jsx)(n.h3,{id:"argocd-features",children:"ArgoCD Features"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Web UI"}),": Visual dashboard showing application status and sync state"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CLI Tool"}),": Command-line interface for managing applications"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Multi-cluster Support"}),": Manage applications across multiple Kubernetes clusters"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"RBAC"}),": Role-based access control for different teams"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Rollback"}),": Easy rollback to previous Git commits"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Drift Detection"}),": Alerts when cluster state doesn't match Git"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"putting-it-all-together-a-complete-workflow",children:"Putting It All Together: A Complete Workflow"}),"\n",(0,i.jsx)(n.p,{children:"Here's how these tools work together in practice:"}),"\n",(0,i.jsx)(n.h3,{id:"1-create-a-helm-chart",children:"1. Create a Helm Chart"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"helm create my-web-app\n# Edit templates and values.yaml\n"})}),"\n",(0,i.jsx)(n.h3,{id:"2-store-chart-in-git",children:"2. Store Chart in Git"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'git add my-web-app/\ngit commit -m "Add web app Helm chart"\ngit push origin main\n'})}),"\n",(0,i.jsx)(n.h3,{id:"3-create-argocd-application",children:"3. Create ArgoCD Application"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"# argocd-apps/web-app.yaml\napiVersion: argoproj.io/v1alpha1\nkind: Application\nmetadata:\n  name: web-app-prod\nspec:\n  source:\n    repoURL: https://github.com/mycompany/helm-charts\n    path: my-web-app\n    targetRevision: main\n    helm:\n      valueFiles:\n        - values-production.yaml\n  destination:\n    server: https://kubernetes.default.svc\n    namespace: production\n  syncPolicy:\n    automated: {}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"4-deploy-via-git",children:"4. Deploy via Git"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f argocd-apps/web-app.yaml\n"})}),"\n",(0,i.jsx)(n.h3,{id:"5-make-changes",children:"5. Make Changes"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Update image tag in values-production.yaml\ngit add values-production.yaml\ngit commit -m "Update web app to v1.2.0"\ngit push origin main\n# ArgoCD automatically deploys the change!\n'})}),"\n",(0,i.jsx)(n.h2,{id:"choosing-your-deployment-strategy",children:"Choosing Your Deployment Strategy"}),"\n",(0,i.jsx)(n.p,{children:'The key question isn\'t "which tool is best?" but rather "which tool fits my current needs?" Here\'s a decision tree to help:'}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Kubernetes Deployment Decision Tree",src:t(24163).A+"",width:"1287",height:"638"})}),"\n",(0,i.jsx)(n.h2,{id:"when-to-use-each-tool",children:"When to Use Each Tool"}),"\n",(0,i.jsx)(n.h3,{id:"start-with-helm-if-you-need",children:"Start with Helm if you need:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Template-based configuration management"}),"\n",(0,i.jsx)(n.li,{children:"Environment-specific deployments"}),"\n",(0,i.jsx)(n.li,{children:"Application versioning and rollbacks"}),"\n",(0,i.jsx)(n.li,{children:"Reusable application packages"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"add-gitops-when-you-want",children:"Add GitOps when you want:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Audit trail of all changes"}),"\n",(0,i.jsx)(n.li,{children:"Collaborative deployment workflows"}),"\n",(0,i.jsx)(n.li,{children:"Disaster recovery capabilities"}),"\n",(0,i.jsx)(n.li,{children:"Separation of code and deployment workflows"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"implement-argocd-when-you-have",children:"Implement ArgoCD when you have:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Multiple applications to manage"}),"\n",(0,i.jsx)(n.li,{children:"Multiple environments or clusters"}),"\n",(0,i.jsx)(n.li,{children:"Need for automated sync and drift detection"}),"\n",(0,i.jsx)(n.li,{children:"Teams that need self-service deployments"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"common-beginner-mistakes",children:"Common Beginner Mistakes"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Over-templating Helm charts"}),": Start simple, add complexity only when needed"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Putting secrets in Git"}),": Use tools like Sealed Secrets or external secret management"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Manual kubectl changes"}),": Resist the urge to fix things directly - always go through Git"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Ignoring resource limits"}),": Always set CPU and memory limits in your Helm charts"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Not testing locally"}),": Use ",(0,i.jsx)(n.code,{children:"helm template"})," and ",(0,i.jsx)(n.code,{children:"kubectl --dry-run"})," to test changes"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Practice with Helm"}),": Create a simple chart for a basic web application"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Set up a GitOps repository"}),": Start with a single application and simple structure"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Install ArgoCD"}),": Try it in a development cluster first"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Learn kubectl basics"}),": These tools complement, don't replace, Kubernetes knowledge"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Understand YAML"}),": Get comfortable reading and writing Kubernetes manifests"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"learning-resources",children:"Learning Resources"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Helm Documentation"}),": ",(0,i.jsx)(n.a,{href:"https://helm.sh",children:"helm.sh"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"ArgoCD Getting Started"}),": ",(0,i.jsx)(n.a,{href:"https://argo-cd.readthedocs.io",children:"argo-cd.readthedocs.io"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"GitOps Guide"}),": ",(0,i.jsx)(n.a,{href:"https://www.gitops.tech",children:"www.gitops.tech"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Kubernetes Basics"}),": ",(0,i.jsx)(n.a,{href:"https://kubernetes.io/docs/tutorials/",children:"kubernetes.io/docs/tutorials/"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Remember: these tools solve real problems, but they add complexity. Start simple, understand the problems you're trying to solve, and add sophistication gradually as your needs grow."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);
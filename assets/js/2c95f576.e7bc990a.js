"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9572],{1425:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"TechSavvy/mermaid-language-guide","title":"Mastering Mermaid: Turn Text into Diagrams Like a Pro","description":"A practical guide to creating powerful diagrams with simple text syntax - perfect for developers who want visual docs without design tools.","source":"@site/docs/TechSavvy/mermaid-language-guide.md","sourceDirName":"TechSavvy","slug":"/mermaid-guide","permalink":"/blogs/docs/mermaid-guide","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/TechSavvy/mermaid-language-guide.md","tags":[],"version":"current","frontMatter":{"title":"Mastering Mermaid: Turn Text into Diagrams Like a Pro","description":"A practical guide to creating powerful diagrams with simple text syntax - perfect for developers who want visual docs without design tools.","slug":"/mermaid-guide"},"sidebar":"tutorialSidebar","previous":{"title":"Tech Savvy","permalink":"/blogs/docs/TechSavvy"},"next":{"title":"Docker","permalink":"/blogs/docs/category/docker"}}');var s=r(4848),t=r(8453);const a={title:"Mastering Mermaid: Turn Text into Diagrams Like a Pro",description:"A practical guide to creating powerful diagrams with simple text syntax - perfect for developers who want visual docs without design tools.",slug:"/mermaid-guide"},l=void 0,o={},d=[{value:"\ud83e\udde0 TL;DR - A Picture is Worth a Thousand Words",id:"-tldr---a-picture-is-worth-a-thousand-words",level:2},{value:"\ud83c\udfaf What You&#39;ll Gain in 2 Minutes",id:"-what-youll-gain-in-2-minutes",level:2},{value:"\ud83d\ude80 Start Here: Your First Diagram",id:"-start-here-your-first-diagram",level:2},{value:"\ud83d\udccb The Essential Syntax (Copy &amp; Adapt)",id:"-the-essential-syntax-copy--adapt",level:2},{value:"Diagram Types - Pick Your Tool",id:"diagram-types---pick-your-tool",level:3},{value:"Layout Direction - One Line Changes Everything",id:"layout-direction---one-line-changes-everything",level:3},{value:"Nodes - Shape Communicates Meaning",id:"nodes---shape-communicates-meaning",level:3},{value:"\ud83c\udfa8 Make It Look Professional",id:"-make-it-look-professional",level:2},{value:"Quick Themes",id:"quick-themes",level:3},{value:"Custom Styling",id:"custom-styling",level:3},{value:"\ud83d\udd17 Advanced Patterns That Save Time",id:"-advanced-patterns-that-save-time",level:2},{value:"Subgraphs - Two Powerful Uses",id:"subgraphs---two-powerful-uses",level:3},{value:"Interactive Elements",id:"interactive-elements",level:3},{value:"\ud83d\udca1 Real-World Example: API Authentication",id:"-real-world-example-api-authentication",level:2},{value:"\u26a1 Implementation Guide",id:"-implementation-guide",level:2},{value:"\ud83d\udfe2 Easiest: GitHub/GitLab",id:"-easiest-githubgitlab",level:3},{value:"\ud83d\udfe1 Local Development",id:"-local-development",level:3},{value:"\ud83d\udd34 Advanced: Live Rendering",id:"-advanced-live-rendering",level:3},{value:"\ud83c\udfaf Pro Tips for Success",id:"-pro-tips-for-success",level:2},{value:"\ud83d\udd25 Next Steps",id:"-next-steps",level:2}];function c(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"-tldr---a-picture-is-worth-a-thousand-words",children:"\ud83e\udde0 TL;DR - A Picture is Worth a Thousand Words"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Mermaid Mind Map Overview",src:r(5530).A+"",width:"5350",height:"3164"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"The bottom line:"})," Turn ",(0,s.jsx)(n.code,{children:"A --\x3e B --\x3e C"})," into professional diagrams that live in your code, update automatically, and never break when you refactor. No Visio, no Figma, no export headaches."]}),"\n",(0,s.jsx)(n.h2,{id:"-what-youll-gain-in-2-minutes",children:"\ud83c\udfaf What You'll Gain in 2 Minutes"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Perfect for:"})," READMEs, technical docs, system designs, and any time you need to explain complex flows quickly."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-start-here-your-first-diagram",children:"\ud83d\ude80 Start Here: Your First Diagram"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mermaid",children:"flowchart LR\r\n    Start([I write text]) --\x3e Magic{Mermaid} --\x3e End[Beautiful diagram!]\n"})}),"\n",(0,s.jsx)(n.p,{children:"That's it. Three nodes, two arrows, zero design skills required."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-the-essential-syntax-copy--adapt",children:"\ud83d\udccb The Essential Syntax (Copy & Adapt)"}),"\n",(0,s.jsx)(n.h3,{id:"diagram-types---pick-your-tool",children:"Diagram Types - Pick Your Tool"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mermaid",children:"flowchart TD\r\n    A[\ud83d\udd04 Flowchart<br/>Process flows] --\x3e B[\ud83d\udcde Sequence<br/>API calls]\r\n    B --\x3e C[\ud83d\udcca Gantt<br/>Timelines] \r\n    C --\x3e D[\ud83e\udde0 Mindmap<br/>Ideas]\r\n    D --\x3e E[\ud83c\udfd7\ufe0f Class<br/>Code structure]\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Quick picker:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["System workflow? \u2192 ",(0,s.jsx)(n.code,{children:"flowchart"})]}),"\n",(0,s.jsxs)(n.li,{children:["API documentation? \u2192 ",(0,s.jsx)(n.code,{children:"sequenceDiagram"})]}),"\n",(0,s.jsxs)(n.li,{children:["Project planning? \u2192 ",(0,s.jsx)(n.code,{children:"gantt"})]}),"\n",(0,s.jsxs)(n.li,{children:["Brainstorming? \u2192 ",(0,s.jsx)(n.code,{children:"mindmap"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"layout-direction---one-line-changes-everything",children:"Layout Direction - One Line Changes Everything"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mermaid",children:"graph TD\r\n    A[Top Down<br/>TD] \r\n    B[Left Right<br/>LR]\r\n    C[Right Left<br/>RL] \r\n    D[Bottom Top<br/>BT]\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Pro tip:"})," ",(0,s.jsx)(n.code,{children:"LR"})," works best for process flows, ",(0,s.jsx)(n.code,{children:"TD"})," for hierarchies."]}),"\n",(0,s.jsx)(n.h3,{id:"nodes---shape-communicates-meaning",children:"Nodes - Shape Communicates Meaning"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mermaid",children:"flowchart LR\r\n    A[Rectangle: Process] --\x3e B(Round: State)\r\n    B --\x3e C{Diamond: Decision} --\x3e D[[Module: Component]]\r\n    C --\x3e E[/Parallelogram: Input/] --\x3e F[\\Output\\]\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Cheat sheet:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"A[text]"})," = Process step"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"A(text)"})," = Start/end state"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"A{text}"})," = Decision point"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"A[[text]]"})," = Module/component"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-make-it-look-professional",children:"\ud83c\udfa8 Make It Look Professional"}),"\n",(0,s.jsx)(n.h3,{id:"quick-themes",children:"Quick Themes"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mermaid",children:"%%{init: {'theme':'dark'}}%%\r\nflowchart LR\r\n    A[Dark Theme] --\x3e B[Instant Pro Look]\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Available:"})," ",(0,s.jsx)(n.code,{children:"default"}),", ",(0,s.jsx)(n.code,{children:"dark"}),", ",(0,s.jsx)(n.code,{children:"forest"}),", ",(0,s.jsx)(n.code,{children:"neutral"})]}),"\n",(0,s.jsx)(n.h3,{id:"custom-styling",children:"Custom Styling"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mermaid",children:"flowchart LR\r\n    A[Important] --\x3e B[Normal]\r\n    classDef critical fill:#ff6b6b,stroke:#d63031,color:#fff\r\n    class A critical\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Use cases:"})," Highlight critical paths, color-code by team/system, match brand colors."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-advanced-patterns-that-save-time",children:"\ud83d\udd17 Advanced Patterns That Save Time"}),"\n",(0,s.jsx)(n.h3,{id:"subgraphs---two-powerful-uses",children:"Subgraphs - Two Powerful Uses"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"1. Visual Grouping"})," - Label related nodes under a box:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mermaid",children:'flowchart TB\r\n    User --\x3e Frontend\r\n    subgraph "Backend Services"\r\n        API1[User Service]\r\n        API2[Payment Service]\r\n        API3[Notification Service]\r\n    end\r\n    Frontend --\x3e API1\r\n    Frontend --\x3e API2\r\n    API1 --\x3e DB[(Database)]\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"2. Modular Flow"})," - Connect separate process sections:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mermaid",children:'flowchart LR\r\n    subgraph "Phase 1: Planning"\r\n        A[Requirements] --\x3e B[Design]\r\n    end\r\n    subgraph "Phase 2: Development"\r\n        C[Code] --\x3e D[Test]\r\n    end\r\n    B --\x3e C\r\n    D --\x3e E[Deploy]\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Use cases:"})," System boundaries, process phases, team responsibilities, architectural layers."]}),"\n",(0,s.jsx)(n.h3,{id:"interactive-elements",children:"Interactive Elements"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mermaid",children:'flowchart LR\r\n    A[Click me!] --\x3e B[Documentation]\r\n    click A "https://mermaid.js.org" "Opens Mermaid docs"\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Works in:"})," GitHub, Docusaurus, GitBook, VS Code preview."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-real-world-example-api-authentication",children:"\ud83d\udca1 Real-World Example: API Authentication"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mermaid",children:"%%{init: {'theme':'forest'}}%%\r\nsequenceDiagram\r\n    participant U as User\r\n    participant F as Frontend\r\n    participant A as Auth API\r\n    participant D as Database\r\n    \r\n    U->>F: Login request\r\n    F->>A: POST /auth/login\r\n    A->>D: Validate credentials\r\n    D--\x3e>A: User data\r\n    A--\x3e>F: JWT token\r\n    F--\x3e>U: Redirect to dashboard\r\n    \r\n    Note over F,A: Token stored in httpOnly cookie\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Why this works:"})," Shows real API flow, includes security note, uses professional theme."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-implementation-guide",children:"\u26a1 Implementation Guide"}),"\n",(0,s.jsx)(n.h3,{id:"-easiest-githubgitlab",children:"\ud83d\udfe2 Easiest: GitHub/GitLab"}),"\n",(0,s.jsx)(n.p,{children:"Just wrap your code:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-markdown",children:"```mermaid\r\nflowchart LR\r\n    A --\x3e B\r\n```\n"})}),"\n",(0,s.jsx)(n.h3,{id:"-local-development",children:"\ud83d\udfe1 Local Development"}),"\n",(0,s.jsx)(n.p,{children:"Install the CLI:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm install -g @mermaid-js/mermaid-cli\r\nmmdc -i input.mmd -o output.png\n"})}),"\n",(0,s.jsx)(n.h3,{id:"-advanced-live-rendering",children:"\ud83d\udd34 Advanced: Live Rendering"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Docusaurus:"})," Built-in support"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"VS Code:"})," Mermaid Preview extension"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Obsidian:"})," Native support"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Online:"})," ",(0,s.jsx)(n.a,{href:"https://mermaid.live",children:"mermaid.live"})," for testing"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-pro-tips-for-success",children:"\ud83c\udfaf Pro Tips for Success"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Start Simple:"})," Master flowcharts before moving to sequence diagrams\r\n",(0,s.jsx)(n.strong,{children:"Version Control:"})," Your diagrams evolve with your code - no more outdated Visio files\r\n",(0,s.jsx)(n.strong,{children:"Consistency:"})," Pick 2-3 diagram types and master them deeply\r\n",(0,s.jsx)(n.strong,{children:"Testing:"})," Always preview in your target environment (GitHub renders differently than Docusaurus)"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-next-steps",children:"\ud83d\udd25 Next Steps"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Try it now:"})," Copy any example above into a GitHub README"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Bookmark:"})," ",(0,s.jsx)(n.a,{href:"https://mermaid.live",children:"mermaid.live"})," for quick testing"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Level up:"})," Add Mermaid to your documentation workflow this week"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Remember:"})," The best diagram is the one that gets created and maintained. Mermaid makes both easy."]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["\ud83d\udcaa ",(0,s.jsx)(n.strong,{children:"You're ready."})," Pick an existing process in your project and diagram it. Your future self (and teammates) will thank you."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},5530:(e,n,r)=>{r.d(n,{A:()=>i});const i=r.p+"assets/images/mermaid-mindmap-overview-c6640169c4ff643d1e497a1702a3bf24.png"},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>l});var i=r(6540);const s={},t=i.createContext(s);function a(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6480],{28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>c});var s=i(96540);const o={},r=s.createContext(o);function l(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),s.createElement(r.Provider,{value:n},e.children)}},51863:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>t,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"TechSavvy/kubernetes/K8S_Calico_Crash_Course","title":"Kubernetes Calico Crash Course","description":"A hands-on guide to Calico networking in Kubernetes: installation, core components, pod-to-pod communication, network policies, advanced features, and troubleshooting.","source":"@site/docs/TechSavvy/kubernetes/K8S_Calico_Crash_Course.md","sourceDirName":"TechSavvy/kubernetes","slug":"/TechSavvy/kubernetes/k8s-calico-crash-course","permalink":"/blogs/docs/TechSavvy/kubernetes/k8s-calico-crash-course","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/TechSavvy/kubernetes/K8S_Calico_Crash_Course.md","tags":[{"inline":true,"label":"kubernetes","permalink":"/blogs/docs/tags/kubernetes"},{"inline":true,"label":"calico","permalink":"/blogs/docs/tags/calico"},{"inline":true,"label":"networking","permalink":"/blogs/docs/tags/networking"},{"inline":true,"label":"cloudnative","permalink":"/blogs/docs/tags/cloudnative"},{"inline":true,"label":"devops","permalink":"/blogs/docs/tags/devops"},{"inline":true,"label":"containers","permalink":"/blogs/docs/tags/containers"},{"inline":true,"label":"techsavvy","permalink":"/blogs/docs/tags/techsavvy"}],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Kubernetes Calico Crash Course","description":"A hands-on guide to Calico networking in Kubernetes: installation, core components, pod-to-pod communication, network policies, advanced features, and troubleshooting.","slug":"k8s-calico-crash-course","date":"2025-07-28T00:00:00.000Z","authors":["wiseagent"],"tags":["kubernetes","calico","networking","cloudnative","devops","containers","techsavvy"],"sidebar_label":"Calico Crash Course","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Kubectl Reference","permalink":"/blogs/docs/TechSavvy/kubernetes/Kubectl"},"next":{"title":"Calicoctl Reference","permalink":"/blogs/docs/TechSavvy/kubernetes/K8S_Calicoctl"}}');var o=i(74848),r=i(28453);const l={title:"Kubernetes Calico Crash Course",description:"A hands-on guide to Calico networking in Kubernetes: installation, core components, pod-to-pod communication, network policies, advanced features, and troubleshooting.",slug:"k8s-calico-crash-course",date:new Date("2025-07-28T00:00:00.000Z"),authors:["wiseagent"],tags:["kubernetes","calico","networking","cloudnative","devops","containers","techsavvy"],sidebar_label:"Calico Crash Course",sidebar_position:2},c=void 0,t={},a=[{value:"Here is the longer version...",id:"here-is-the-longer-version",level:2},{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Introduction",id:"introduction",level:2},{value:"Core Components",id:"core-components",level:2},{value:"Installation",id:"installation",level:2},{value:"Networking Mechanics",id:"networking-mechanics",level:2},{value:"IP Address Management (IPAM)",id:"ip-address-management-ipam",level:3},{value:"Routing Options",id:"routing-options",level:3},{value:"Pod-to-Pod Communication",id:"pod-to-pod-communication",level:2},{value:"Architecture Overview",id:"architecture-overview",level:3},{value:"Communication Flow",id:"communication-flow",level:3},{value:"Configuration",id:"configuration",level:3},{value:"Verification",id:"verification",level:3},{value:"Troubleshooting Common Issues",id:"troubleshooting-common-issues",level:3},{value:"Configuration Matrix",id:"configuration-matrix",level:3},{value:"Network Policies",id:"network-policies",level:2},{value:"Example: Multi-Tier App Security",id:"example-multi-tier-app-security",level:3},{value:"Advanced Features",id:"advanced-features",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Configuration Discovery",id:"configuration-discovery",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",section:"section",strong:"strong",sup:"sup",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["TL;DR, A picture is worth a thousand words.\n",(0,o.jsx)(n.img,{alt:"Kubernetes Calico in a glance",src:i(96194).A+"",width:"6709",height:"4020"})]}),"\n",(0,o.jsx)(n.h2,{id:"here-is-the-longer-version",children:"Here is the longer version..."}),"\n",(0,o.jsx)(n.h1,{id:"kubernetes-calico-crash-course",children:"Kubernetes Calico Crash Course"}),"\n",(0,o.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#introduction",children:"Introduction"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#core-components",children:"Core Components"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#installation",children:"Installation"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#networking-mechanics",children:"Networking Mechanics"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#pod-to-pod-communication",children:"Pod-to-Pod Communication"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#network-policies",children:"Network Policies"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#advanced-features",children:"Advanced Features"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#troubleshooting",children:"Troubleshooting"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#configuration-discovery",children:"Configuration Discovery"})}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,o.jsx)(n.p,{children:"Calico is a cloud-native networking solution providing:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"High-performance container networking"}),"\n",(0,o.jsx)(n.li,{children:"Advanced network security policies"}),"\n",(0,o.jsx)(n.li,{children:"Cross-platform compatibility (K8s, OpenStack, bare metal)"}),"\n",(0,o.jsx)(n.li,{children:"Choice of data planes (Linux, eBPF, Windows)"}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"core-components",children:"Core Components"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Component"}),(0,o.jsx)(n.th,{children:"Function"}),(0,o.jsx)(n.th,{children:"Runs On"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"Felix"})}),(0,o.jsx)(n.td,{children:"Programs routes/ACLs"}),(0,o.jsx)(n.td,{children:"Each node"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"BIRD"})}),(0,o.jsx)(n.td,{children:"BGP route distribution"}),(0,o.jsx)(n.td,{children:"Each node"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"confd"})}),(0,o.jsx)(n.td,{children:"Config generation"}),(0,o.jsx)(n.td,{children:"Control nodes"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"CNI Plugin"})}),(0,o.jsx)(n.td,{children:"Pod networking"}),(0,o.jsx)(n.td,{children:"Each node"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"Typha"})}),(0,o.jsx)(n.td,{children:"API server proxy (large clusters)"}),(0,o.jsx)(n.td,{children:"Control nodes"})]})]})]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Install operator\nkubectl create -f https://docs.projectcalico.org/manifests/tigera-operator.yaml\n\n# Apply custom resources\nkubectl create -f https://docs.projectcalico.org/manifests/custom-resources.yaml\n\n# Verify installation\nwatch kubectl get pods -n calico-system\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"networking-mechanics",children:"Networking Mechanics"}),"\n",(0,o.jsx)(n.h3,{id:"ip-address-management-ipam",children:"IP Address Management (IPAM)"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"apiVersion: projectcalico.org/v3\nkind: IPPool\nmetadata:\n  name: default-pool\nspec:\n  cidr: 192.168.0.0/16\n  ipMode: CrossSubnet\n  natOutgoing: true\n"})}),"\n",(0,o.jsx)(n.h3,{id:"routing-options",children:"Routing Options"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"BGP Direct Routing"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Uses node IPs for pod-to-pod communication"}),"\n",(0,o.jsx)(n.li,{children:"Requires BGP-enabled network infrastructure"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Overlay Networks"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"IP-in-IP (protocol 4) or VXLAN (UDP 4789)"}),"\n",(0,o.jsx)(n.li,{children:"Works across any L3 network"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"pod-to-pod-communication",children:"Pod-to-Pod Communication"}),"\n",(0,o.jsx)(n.h3,{id:"architecture-overview",children:"Architecture Overview"}),"\n",(0,o.jsx)(n.p,{children:"Calico enables direct pod-to-pod communication using these key components:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"veth pairs for same-node communication"}),"\n",(0,o.jsx)(n.li,{children:"tunl0 interface for IP-in-IP encapsulation"}),"\n",(0,o.jsx)(n.li,{children:"BGP routing for cross-node traffic"}),"\n",(0,o.jsx)(n.li,{children:"iptables/eBPF for policy enforcement"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"graph TD\n    A[Pod A] --\x3e|veth pair| B[Host A]\n    B --\x3e|BGP/Overlay| C[Host B]\n    C --\x3e|veth pair| D[Pod B]\n"})}),"\n",(0,o.jsx)(n.h3,{id:"communication-flow",children:"Communication Flow"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Same node"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"sequenceDiagram\n    Pod1->>veth1: Outgoing packet\n    veth1->>Linux Bridge: Forward\n    Linux Bridge->>veth2: Direct delivery\n    veth2->>Pod2: Incoming packet\n\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Cross-node"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"sequenceDiagram\n    Pod1->>tunl0: Encapsulated packet\n    tunl0->>Node1 NIC: Add outer header (src:10.30.1.1, dst:10.30.1.2)\n    Node1 NIC->>Node2 NIC: Routed via underlay\n    Node2 NIC->>tunl0: Decapsulate\n    tunl0->>Pod2: Deliver original packet\n"})}),"\n",(0,o.jsx)(n.h3,{id:"configuration",children:"Configuration"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"IP Pool Setup\nDefine CIDR and encapsulation mode:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-text",children:"apiVersion: projectcalico.org/v3\nkind: IPPool\nmetadata:\n  name: default-pool\nspec:\n  cidr: 192.168.0.0/16\n  ipipMode: Always  # Options: Always, CrossSubnet, Never\n  vxlanMode: Never\n  natOutgoing: true\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"2",children:["\n",(0,o.jsx)(n.li,{children:"Interface Detection\nConfigure IP autodetection method:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-text",children:'# calico-config ConfigMap\ndata:\n  ip_autodetection_method: "interface=eth.*"\n'})}),"\n",(0,o.jsxs)(n.ol,{start:"3",children:["\n",(0,o.jsx)(n.li,{children:"BGP Configuration\nFor direct routing without encapsulation:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"calicoctl create -f - <<EOF\napiVersion: projectcalico.org/v3\nkind: BGPConfiguration\nmetadata:\n  name: default\nspec:\n  logSeverityScreen: Info\n  nodeToNodeMeshEnabled: true\nEOF\n"})}),"\n",(0,o.jsx)(n.h3,{id:"verification",children:"Verification"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Check routes on worker node:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"ip route show | grep calico\n# Example output:\n# 192.168.1.0/24 via 10.30.1.1 dev tunl0 proto bird \n"})}),"\n",(0,o.jsxs)(n.ol,{start:"2",children:["\n",(0,o.jsx)(n.li,{children:"Test pod connectivity:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"kubectl exec pod1 -- ping -c 3 <pod2-ip>\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"3",children:["\n",(0,o.jsx)(n.li,{children:"Inspect BGP peers:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"calicoctl node status\n# Output:\n# IPv4 BGP status\n# +--------------+-------------------+-------+----------+-------------+\n# | PEER ADDRESS |     PEER TYPE     | STATE |  SINCE   |    INFO     |\n# +--------------+-------------------+-------+----------+-------------+\n# | 10.30.1.2    | node-to-node mesh | up    | 09:32:44 | Established |\n# +--------------+-------------------+-------+----------+-------------+\n"})}),"\n",(0,o.jsx)(n.h3,{id:"troubleshooting-common-issues",children:"Troubleshooting Common Issues"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Missing Routes\nEnsure Calico pods are running:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"kubectl get pods -n calico-system\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"2",children:["\n",(0,o.jsx)(n.li,{children:"Encapsulation Mismatch\nVerify IP pool configuration matches cluster network:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"calicoctl get ippool -o yaml\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"3",children:["\n",(0,o.jsx)(n.li,{children:"Firewall Conflicts\nRequired open ports:"}),"\n"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"IP-in-IP: Protocol 4"}),"\n",(0,o.jsx)(n.li,{children:"VXLAN: UDP 4789"}),"\n",(0,o.jsx)(n.li,{children:"BGP: TCP 179"}),"\n"]}),"\n",(0,o.jsxs)(n.ol,{start:"4",children:["\n",(0,o.jsx)(n.li,{children:"Interface Detection\nCheck detected host IP:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"calicoctl get node <node-name> -o yaml | grep 'ipv4Address'\n"})}),"\n",(0,o.jsxs)(n.p,{children:["This implementation enables near line-rate performance (< 1ms latency) while maintaining Kubernetes network model compliance",(0,o.jsx)(n.sup,{children:(0,o.jsx)(n.a,{href:"#user-content-fn-1",id:"user-content-fnref-1","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})}),". For hybrid cloud deployments, consider VXLAN encapsulation when BGP isn't feasible",(0,o.jsx)(n.sup,{children:(0,o.jsx)(n.a,{href:"#user-content-fn-2",id:"user-content-fnref-2","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"2"})}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"configuration-matrix",children:"Configuration Matrix"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Scenario"}),(0,o.jsx)(n.th,{children:"Configuration"}),(0,o.jsx)(n.th,{children:"Performance"}),(0,o.jsx)(n.th,{children:"Requirements"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"Same Node"}),(0,o.jsx)(n.td,{children:"Direct veth routing"}),(0,o.jsx)(n.td,{children:"10 \u03bcs latency"}),(0,o.jsx)(n.td,{children:"Default setup"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"Cross-Node/BGP"}),(0,o.jsx)(n.td,{children:"BGP routing table"}),(0,o.jsx)(n.td,{}),(0,o.jsx)(n.td,{})]})]})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Inspect interfaces\nip link show | grep calico\n\n# View BGP peers\nbirdcl -s /var/run/calico/bird.ctl show protocols\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"network-policies",children:"Network Policies"}),"\n",(0,o.jsx)(n.h3,{id:"example-multi-tier-app-security",children:"Example: Multi-Tier App Security"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"apiVersion: projectcalico.org/v3\nkind: NetworkPolicy\nmetadata:\n  name: frontend-policy\nspec:\n  selector: role == 'frontend'\n  ingress:\n    - action: Allow\n      protocol: TCP\n      source:\n        selector: app == 'ingress-controller'\n      destination:\n        ports:[443]\n  egress:\n    - action: Allow\n      protocol: TCP\n      destination:\n        selector: role == 'backend'\n        ports:[8080]\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"advanced-features",children:"Advanced Features"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"eBPF Data Plane"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'calicoctl patch kubecontrollersconfiguration default \\\n  --patch=\'{"spec": {"controllers": {"node": {"hostEndpoint": {"autoCreate": "Enabled"}}}}}\'\n'})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"WireGuard Encryption"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"apiVersion: projectcalico.org/v3\nkind: FelixConfiguration\nmetadata:\n  name: default\nspec:\n  wireguardEnabled: true\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Service Graph"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"calicoctl get serviceGraph -o wide\n"})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,o.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Pods can't communicate across nodes"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Check BGP peer status"}),"\n",(0,o.jsx)(n.li,{children:"Verify IP pool CIDR matches cluster network"}),"\n",(0,o.jsx)(n.li,{children:"Ensure firewall allows Calico protocols"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Network Policy not enforced"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Check policy order (",(0,o.jsx)(n.code,{children:"calicoctl get policy -o wide"}),")"]}),"\n",(0,o.jsx)(n.li,{children:"Verify selector matches pod labels"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"IPAM exhaustion"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"calicoctl ipam release --ip= --from=\n"})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"configuration-discovery",children:"Configuration Discovery"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Cluster-wide Settings"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"calicoctl get clusterinformation -o yaml\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Node-specific Config"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"calicoctl get node  -o yaml\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Current State Analysis"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"calicoctl diags --include=all\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Policy Audit"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"calicoctl get networkpolicy -A -o yaml\n"})}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["This comprehensive guide covers Calico's fundamentals through advanced features. For production deployments, always reference the ",(0,o.jsx)(n.a,{href:"https://docs.projectcalico.org/",children:"official documentation"})," for version-specific details."]}),"\n","\n",(0,o.jsxs)(n.section,{"data-footnotes":!0,className:"footnotes",children:[(0,o.jsx)(n.h2,{className:"sr-only",id:"footnote-label",children:"Footnotes"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{id:"user-content-fn-1",children:["\n",(0,o.jsxs)(n.p,{children:["Reference for network model compliance statistics ",(0,o.jsx)(n.a,{href:"#user-content-fnref-1","data-footnote-backref":"","aria-label":"Back to reference 1",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{id:"user-content-fn-2",children:["\n",(0,o.jsxs)(n.p,{children:["Reference for VXLAN encapsulation in hybrid deployments ",(0,o.jsx)(n.a,{href:"#user-content-fnref-2","data-footnote-backref":"","aria-label":"Back to reference 2",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},96194:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/Calico-7aed47d17870fb28106b28a9f0fe7ed1.png"}}]);